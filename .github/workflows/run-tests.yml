name: run-tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        php: [ 7.3, 7.4, 8.0, 8.1 ]
        dependency-version: [ prefer-stable ]

    name: P${{ matrix.php }} - ${{ matrix.dependency-version }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install openssl latest version
        run: |
          sudo apt-get update && sudo apt-get upgrade
          sudo apt install build-essential checkinstall zlib1g-dev -y
          wget https://www.openssl.org/source/openssl-1.1.1o.tar.gz
          tar -xf openssl-1.1.1o.tar.gz
          cd openssl-1.1.1o.tar.gz
          ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib
          make
          make test

      - name: Display openssl&libssl-dev versions
        run: dpkg -l openssl libssl-dev | grep '^ii' | cut -c5-

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, openssl-1.1.1o
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

      - name: Write Secret Test Invoices
        run: |
          mkdir tests/fixtures/private/
          echo $ENEL_INVOICE >> tests/fixtures/private/IT12345678910_0Efs6.xml.p7m
        shell: bash
        env:
          ENEL_INVOICE : ${{secrets.ENEL_INVOICE}}

      - name: Execute tests
        run: composer test
